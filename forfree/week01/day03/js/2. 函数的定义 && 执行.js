// 函数是引用数据类型的
// 基本数据类型是操作值的，引用数据类型操作的是空间地址
// 函数名实际上也是一个空间地址

function fn(n,m) { // 函数定义时,浏览器对函数体中的代码不执行.
    var num = 100;
    console.log(num);
    fn(); // 函数体内的代码,浏览器会默认变成字符串形式,所以fn()写里面不报错
}
'fn()';
fn(100,200);
var obj = {}; // obj实际上只是存储一个十六进制的空间地址（字符串） 【0-9a-f】

/**函数的定义
 * 1. 首先开辟一个堆内存的空间地址
 * 2. 把函数体中的代码当做字符串存储到堆内存中
 * 3. 把堆内存的空间地址赋值给函数名
 *  */

/**函数的执行:fn()
 * 1. 形成一个新的私有作用域(私有作用域:运行环境)
 * 2. 形参赋值
 * 3. 变量提升
 * 4. 代码从上到下运行
 * 5. 作用域是否销毁
 */

/**点击事件:在 JS 中可以给元素事件的事件行为绑定方法,当点击触发这些事件行为时,那么绑定的函数会立即执行(不叫小括号让函数执行)
 * 
 */